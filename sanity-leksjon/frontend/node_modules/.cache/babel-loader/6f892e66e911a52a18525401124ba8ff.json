{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar config_1 = require(\"./config\");\n\nvar hostReportError_1 = require(\"./util/hostReportError\");\n\nexports.empty = {\n  closed: true,\n  next: function (value) {},\n  error: function (err) {\n    if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError_1.hostReportError(err);\n    }\n  },\n  complete: function () {}\n};","map":{"version":3,"mappings":";;;;;;AACA;;AACA;;AAEaA,gBAAuB;AAClCC,QAAM,EAAE,IAD0B;AAElCC,MAAI,EAAJ,UAAKC,KAAL,EAAe,CAAqB,CAFF;AAGlCC,OAAK,EAAL,UAAMC,GAAN,EAAc;AACZ,QAAIC,gBAAOC,qCAAX,EAAkD;AAChD,YAAMF,GAAN;AACD,KAFD,MAEO;AACLG,wCAAgBH,GAAhB;AACD;AACF,GATiC;AAUlCI,UAAQ,EAAR,aAA6B;AAVK,CAAvB","names":["exports","closed","next","value","error","err","config_1","useDeprecatedSynchronousErrorHandling","hostReportError_1","complete"],"sources":["C:\\Users\\joaki\\Documents\\GitHub\\Utvikling-Av-Interaktive-Nettsteder\\sanity-leksjon\\frontend\\node_modules\\rxjs\\src\\internal\\Observer.ts"],"sourcesContent":["import { Observer } from './types';\r\nimport { config } from './config';\r\nimport { hostReportError } from './util/hostReportError';\r\n\r\nexport const empty: Observer<any> = {\r\n  closed: true,\r\n  next(value: any): void { /* noop */},\r\n  error(err: any): void {\r\n    if (config.useDeprecatedSynchronousErrorHandling) {\r\n      throw err;\r\n    } else {\r\n      hostReportError(err);\r\n    }\r\n  },\r\n  complete(): void { /*noop*/ }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}