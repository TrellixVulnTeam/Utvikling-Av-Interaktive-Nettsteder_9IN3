{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Subscriber_1 = require(\"../Subscriber\");\n\nfunction canReportError(observer) {\n  while (observer) {\n    var _a = observer,\n        closed_1 = _a.closed,\n        destination = _a.destination,\n        isStopped = _a.isStopped;\n\n    if (closed_1 || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber_1.Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n\n  return true;\n}\n\nexports.canReportError = canReportError;","map":{"version":3,"mappings":";;;;;;AAAA;;AASA,SAAgBA,cAAhB,CAA+BC,QAA/B,EAAuE;AACrE,SAAOA,QAAP,EAAiB;AACT;AAAA,QAAEC,oBAAF;AAAA,QAAUC,4BAAV;AAAA,QAAuBC,wBAAvB;;AACN,QAAIF,QAAM,IAAIE,SAAd,EAAyB;AACvB,aAAO,KAAP;AACD,KAFD,MAEO,IAAID,WAAW,IAAIA,WAAW,YAAYE,uBAA1C,EAAsD;AAC3DJ,cAAQ,GAAGE,WAAX;AACD,KAFM,MAEA;AACLF,cAAQ,GAAG,IAAX;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAZDK","names":["canReportError","observer","closed_1","destination","isStopped","Subscriber_1","exports"],"sources":["C:\\Users\\joaki\\Documents\\GitHub\\Utvikling-Av-Interaktive-Nettsteder\\Oppgave 8 React Sanity\\react\\node_modules\\rxjs\\src\\internal\\util\\canReportError.ts"],"sourcesContent":["import { Subscriber } from '../Subscriber';\r\nimport { Subject } from '../Subject';\r\n\r\n/**\r\n * Determines whether the ErrorObserver is closed or stopped or has a\r\n * destination that is closed or stopped - in which case errors will\r\n * need to be reported via a different mechanism.\r\n * @param observer the observer\r\n */\r\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\r\n  while (observer) {\r\n    const { closed, destination, isStopped } = observer as any;\r\n    if (closed || isStopped) {\r\n      return false;\r\n    } else if (destination && destination instanceof Subscriber) {\r\n      observer = destination;\r\n    } else {\r\n      observer = null;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}