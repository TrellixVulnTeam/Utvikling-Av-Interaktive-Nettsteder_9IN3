{"ast":null,"code":"var _jsxFileName = \"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/Oppgave 8 React Sanity/react/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Movie from './Movie';\nimport { getMovie, getMovies } from '../lib/movieService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies() {\n  _s();\n\n  const [movies, setMovies] = useState();\n  Test;\n  const url = 'https://jsonplaceholder.typicode.com/posts';\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => setMovies(data.splice(0, 10))).catch(error => console.log(error));\n  }, []);\n\n  const getMoviesData = async () => {\n    const movies = await getMovies();\n    console.log(JSON.stringify(movies));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: getMoviesData,\n      children: \"Hent Filmer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), movies === null || movies === void 0 ? void 0 : movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n      alt: movie.title,\n      title: movie.title,\n      body: movie.body\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Movies, \"DsXWz4eQ6qRZ9Cx7rzTltn/5uKY=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/Oppgave 8 React Sanity/react/src/components/Movies.js"],"names":["useEffect","useState","Movie","getMovie","getMovies","Movies","movies","setMovies","Test","url","fetch","then","response","json","data","splice","catch","error","console","log","getMoviesData","JSON","stringify","map","movie","title","body","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,qBAApC;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,EAApC;AAEAO,EAAAA,IAAI;AACJ,QAAMC,GAAG,GAAG,4CAAZ;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAUP,SAAS,CAACO,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAe,EAAf,CAAD,CAF3B,EAGGC,KAHH,CAGUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHpB;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMG,aAAa,GAAG,YAAY;AAChC,UAAMd,MAAM,GAAG,MAAMF,SAAS,EAA9B;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,SAAL,CAAehB,MAAf,CAAZ;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEc,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGd,MAJH,aAIGA,MAJH,uBAIGA,MAAM,CAAEiB,GAAR,CAAaC,KAAD,iBACX,QAAC,KAAD;AAEE,MAAA,GAAG,EAAEA,KAAK,CAACC,KAFb;AAGE,MAAA,KAAK,EAAED,KAAK,CAACC,KAHf;AAIE,MAAA,IAAI,EAAED,KAAK,CAACE;AAJd,OACOF,KAAK,CAACG,EADb;AAAA;AAAA;AAAA;AAAA,YADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhCQtB,M;;KAAAA,M;AAkCT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport Movie from './Movie'\nimport { getMovie, getMovies } from '../lib/movieService'\n\nfunction Movies() {\n  const [movies, setMovies] = useState()\n\n  Test\n  const url = 'https://jsonplaceholder.typicode.com/posts'\n  useEffect(() => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => setMovies(data.splice(0, 10)))\n      .catch((error) => console.log(error))\n  }, [])\n\n  const getMoviesData = async () => {\n    const movies = await getMovies()\n    console.log(JSON.stringify(movies))\n  }\n\n  return (\n    <ul>\n      <button type=\"button\" onClick={getMoviesData}>\n        Hent Filmer\n      </button>\n      {movies?.map((movie) => (\n        <Movie\n          key={movie.id}\n          alt={movie.title}\n          title={movie.title}\n          body={movie.body}\n        />\n      ))}\n    </ul>\n  )\n}\n\nexport default Movies\n"]},"metadata":{},"sourceType":"module"}