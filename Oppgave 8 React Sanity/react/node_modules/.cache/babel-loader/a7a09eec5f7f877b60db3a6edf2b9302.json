{"ast":null,"code":"var _jsxFileName = \"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/Oppgave 8 React Sanity/react/src/components/ActorInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieActor } from '../lib/movieService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ActorInfo() {\n  _s();\n\n  const {\n    actorname\n  } = useParams();\n  const [actor, setActor] = useState();\n  useEffect(() => {\n    // Funksjon for å hente filmer fra en gitt skuespiller\n    const getMovieActorData = async () => {\n      const movieActors = await getMovieActor(actorname); // console.log(JSON.stringify(movieActors))\n\n      let realactorname = movieActors.filter(a => a.slug === actorname); // console.log(realactorname[0].fullname)\n\n      realactorname = realactorname[0].fullname;\n      const actormovies = movieActors.filter(movie => movie.actor === realactorname);\n      console.log(actormovies);\n      setActor(actormovies);\n    }; // Kaller på getActorsData funksjonen og tar med en .catch\n    // for å fange opp eventuelle feil\n\n\n    getMovieActorData().catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: actor === null || actor === void 0 ? void 0 : actor.map((movies, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [(() => {\n        if (index === 0) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: actor.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Movies:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true);\n        }\n      })(), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: actor.movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ActorInfo, \"JPkH5LqWokkZqWuVplDFv1YQrOo=\", false, function () {\n  return [useParams];\n});\n\n_c = ActorInfo;\nexport default ActorInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActorInfo\");","map":{"version":3,"sources":["/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/Oppgave 8 React Sanity/react/src/components/ActorInfo.js"],"names":["useParams","useEffect","useState","getMovieActor","ActorInfo","actorname","actor","setActor","getMovieActorData","movieActors","realactorname","filter","a","slug","fullname","actormovies","movie","console","log","catch","error","map","movies","index","name"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,qBAA9B;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAgBL,SAAS,EAA/B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMO,iBAAiB,GAAG,YAAY;AACpC,YAAMC,WAAW,GAAG,MAAMN,aAAa,CAACE,SAAD,CAAvC,CADoC,CAEpC;;AACA,UAAIK,aAAa,GAAGD,WAAW,CAACE,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWR,SAArC,CAApB,CAHoC,CAIpC;;AACAK,MAAAA,aAAa,GAAGA,aAAa,CAAC,CAAD,CAAb,CAAiBI,QAAjC;AACA,YAAMC,WAAW,GAAGN,WAAW,CAACE,MAAZ,CACjBK,KAAD,IAAWA,KAAK,CAACV,KAAN,KAAgBI,aADT,CAApB;AAGAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACAR,MAAAA,QAAQ,CAACQ,WAAD,CAAR;AACD,KAXD,CAFc,CAcd;AACA;;;AACAP,IAAAA,iBAAiB,GAAGW,KAApB,CAA2BC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAArC;AACD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACE;AAAA,cACGd,KADH,aACGA,KADH,uBACGA,KAAK,CAAEe,GAAP,CAAW,CAACC,MAAD,EAASC,KAAT,kBACV;AAAA,iBACG,CAAC,MAAM;AACN,YAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,8BACE;AAAA,oCACE;AAAA,wBAAKjB,KAAK,CAACkB;AAAX;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,0BADF;AAMD;AACF,OATA,GADH,eAWE;AAAA,kBAAIlB,KAAK,CAACU;AAAV;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA,OAAUO,KAAV;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA1CQnB,S;UACeJ,S;;;KADfI,S;AA4CT,eAAeA,SAAf","sourcesContent":["import { useParams } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\nimport { getMovieActor } from '../lib/movieService'\n\nfunction ActorInfo() {\n  const { actorname } = useParams()\n  const [actor, setActor] = useState()\n\n  useEffect(() => {\n    // Funksjon for å hente filmer fra en gitt skuespiller\n    const getMovieActorData = async () => {\n      const movieActors = await getMovieActor(actorname)\n      // console.log(JSON.stringify(movieActors))\n      let realactorname = movieActors.filter((a) => a.slug === actorname)\n      // console.log(realactorname[0].fullname)\n      realactorname = realactorname[0].fullname\n      const actormovies = movieActors.filter(\n        (movie) => movie.actor === realactorname\n      )\n      console.log(actormovies)\n      setActor(actormovies)\n    }\n    // Kaller på getActorsData funksjonen og tar med en .catch\n    // for å fange opp eventuelle feil\n    getMovieActorData().catch((error) => console.log(error))\n  }, [])\n\n  return (\n    <div>\n      {actor?.map((movies, index) => (\n        <div key={index}>\n          {(() => {\n            if (index === 0) {\n              return (\n                <>\n                  <h2>{actor.name}</h2>\n                  <h3>Movies:</h3>\n                </>\n              )\n            }\n          })()}\n          <p>{actor.movie}</p>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ActorInfo\n"]},"metadata":{},"sourceType":"module"}