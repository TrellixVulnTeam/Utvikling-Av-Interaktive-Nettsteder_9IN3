{"ast":null,"code":"var _jsxFileName = \"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/Oppgave 8 React Sanity/react/src/components/Actors.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport ActorList from './ActorList';\nimport { getActors, getMovieActor } from '../lib/movieService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Actors() {\n  _s();\n\n  const [actors, setActors] = useState();\n  useEffect(() => {\n    // Funksjon for å hente actors data\n    const getActorsData = async () => {\n      const actors = await getActors(); // console.log(JSON.stringify(actors))\n\n      setActors(actors);\n    }; // Kaller på getActorsData funksjonen og tar med en .catch\n    // for å fange opp eventuelle feil\n\n\n    getActorsData().catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: actors === null || actors === void 0 ? void 0 : actors.map(actor => /*#__PURE__*/_jsxDEV(ActorList, {\n      actor: actor.fullname\n    }, actor.slug, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Actors, \"IEbKVh6xt4cs5chQUVoPuZ2JxXs=\");\n\n_c = Actors;\nexport default Actors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Actors\");","map":{"version":3,"sources":["/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/Oppgave 8 React Sanity/react/src/components/Actors.js"],"names":["useEffect","useState","ActorList","getActors","getMovieActor","Actors","actors","setActors","getActorsData","catch","error","console","log","map","actor","fullname","slug"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,qBAAzC;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,EAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMQ,aAAa,GAAG,YAAY;AAChC,YAAMF,MAAM,GAAG,MAAMH,SAAS,EAA9B,CADgC,CAEhC;;AACAI,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD,KAJD,CAFc,CAOd;AACA;;;AACAE,IAAAA,aAAa,GAAGC,KAAhB,CAAuBC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAjC;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAA,cACGJ,MADH,aACGA,MADH,uBACGA,MAAM,CAAEO,GAAR,CAAaC,KAAD,iBACX,QAAC,SAAD;AAA4B,MAAA,KAAK,EAAEA,KAAK,CAACC;AAAzC,OAAgBD,KAAK,CAACE,IAAtB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAtBQX,M;;KAAAA,M;AAwBT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport ActorList from './ActorList'\nimport { getActors, getMovieActor } from '../lib/movieService'\n\nfunction Actors() {\n  const [actors, setActors] = useState()\n\n  useEffect(() => {\n    // Funksjon for å hente actors data\n    const getActorsData = async () => {\n      const actors = await getActors()\n      // console.log(JSON.stringify(actors))\n      setActors(actors)\n    }\n    // Kaller på getActorsData funksjonen og tar med en .catch\n    // for å fange opp eventuelle feil\n    getActorsData().catch((error) => console.log(error))\n  }, [])\n\n  return (\n    <ul>\n      {actors?.map((actor) => (\n        <ActorList key={actor.slug} actor={actor.fullname} />\n      ))}\n    </ul>\n  )\n}\n\nexport default Actors\n"]},"metadata":{},"sourceType":"module"}