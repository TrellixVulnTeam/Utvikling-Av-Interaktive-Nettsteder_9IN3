{"ast":null,"code":"var _jsxFileName = \"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/Oppgave 8 React Sanity/react/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies() {\n  _s();\n\n  const [movies, setMovies] = useState();\n  const url = 'https://jsonplaceholder.typicode.com/posts';\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => setMovies(data)).catch(error => console.log(error));\n  }, []);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: \"Movies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Movies, \"DsXWz4eQ6qRZ9Cx7rzTltn/5uKY=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/Oppgave 8 React Sanity/react/src/components/Movies.js"],"names":["useEffect","useState","Movies","movies","setMovies","url","fetch","then","response","json","data","catch","error","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,EAApC;AACA,QAAMI,GAAG,GAAG,4CAAZ;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAUN,SAAS,CAACM,IAAD,CAF3B,EAGGC,KAHH,CAGUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHpB;AAID,GALQ,EAKN,EALM,CAAT;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAZQD,M;;KAAAA,M;AAcT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from 'react'\n\nfunction Movies() {\n  const [movies, setMovies] = useState()\n  const url = 'https://jsonplaceholder.typicode.com/posts'\n\n  useEffect(() => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => setMovies(data))\n      .catch((error) => console.log(error))\n  }, [])\n  console.log(movies)\n  return <ul>Movies</ul>\n}\n\nexport default Movies\n"]},"metadata":{},"sourceType":"module"}