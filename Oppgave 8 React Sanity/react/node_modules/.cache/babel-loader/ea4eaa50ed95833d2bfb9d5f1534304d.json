{"ast":null,"code":"var _jsxFileName = \"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/Oppgave 8 React Sanity/react/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Movie from './Movie';\nimport { getMovies, getActors, getMovieActor } from '../lib/movieService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies() {\n  _s();\n\n  const [movies, setMovies] = useState();\n  useEffect(() => {\n    // Funksjon for å hente movie data\n    const getMoviesData = async () => {\n      const movies = await getMovies();\n      console.log(JSON.stringify(movies)); // Sorterer listen med filmer etter tittel på filemene\n\n      setMovies(movies.sort((a, b) => a.title > b.title ? 1 : -1));\n    }; // Kaller på getMoviesData funksjonen og tar med en .catch\n    // for å fange opp eventuelle feil.\n\n\n    getMoviesData().catch(error => console.log(error)); // Funksjon for å hente filmer fra en gitt skuespiller\n\n    const getMovieActorData = async () => {\n      const movieActors = await getMovieActor('Robert Downey jr'); // console.log(JSON.stringify(movieActors))\n    }; // Kaller på getActorsData funksjonen og tar med en .catch\n    // for å fange opp eventuelle feil\n\n\n    getMovieActorData().catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: movies === null || movies === void 0 ? void 0 : movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n      title: movie.title,\n      actor: movie.actor\n    }, movie.slug, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Movies, \"DsXWz4eQ6qRZ9Cx7rzTltn/5uKY=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/Oppgave 8 React Sanity/react/src/components/Movies.js"],"names":["useEffect","useState","Movie","getMovies","getActors","getMovieActor","Movies","movies","setMovies","getMoviesData","console","log","JSON","stringify","sort","a","b","title","catch","error","getMovieActorData","movieActors","map","movie","actor","slug"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,QAAoD,qBAApD;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMS,aAAa,GAAG,YAAY;AAChC,YAAMF,MAAM,GAAG,MAAMJ,SAAS,EAA9B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAAZ,EAFgC,CAGhC;;AACAC,MAAAA,SAAS,CAACD,MAAM,CAACO,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAhD,CAAD,CAAT;AACD,KALD,CAFc,CAQd;AACA;;;AACAR,IAAAA,aAAa,GAAGS,KAAhB,CAAuBC,KAAD,IAAWT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CAAjC,EAVc,CAYd;;AACA,UAAMC,iBAAiB,GAAG,YAAY;AACpC,YAAMC,WAAW,GAAG,MAAMhB,aAAa,CAAC,kBAAD,CAAvC,CADoC,CAEpC;AACD,KAHD,CAbc,CAiBd;AACA;;;AACAe,IAAAA,iBAAiB,GAAGF,KAApB,CAA2BC,KAAD,IAAWT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CAArC;AACD,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACE;AAAA,cACGZ,MADH,aACGA,MADH,uBACGA,MAAM,CAAEe,GAAR,CAAaC,KAAD,iBACX,QAAC,KAAD;AAAwB,MAAA,KAAK,EAAEA,KAAK,CAACN,KAArC;AAA4C,MAAA,KAAK,EAAEM,KAAK,CAACC;AAAzD,OAAYD,KAAK,CAACE,IAAlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhCQnB,M;;KAAAA,M;AAkCT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport Movie from './Movie'\nimport { getMovies, getActors, getMovieActor } from '../lib/movieService'\n\nfunction Movies() {\n  const [movies, setMovies] = useState()\n\n  useEffect(() => {\n    // Funksjon for å hente movie data\n    const getMoviesData = async () => {\n      const movies = await getMovies()\n      console.log(JSON.stringify(movies))\n      // Sorterer listen med filmer etter tittel på filemene\n      setMovies(movies.sort((a, b) => (a.title > b.title ? 1 : -1)))\n    }\n    // Kaller på getMoviesData funksjonen og tar med en .catch\n    // for å fange opp eventuelle feil.\n    getMoviesData().catch((error) => console.log(error))\n\n    // Funksjon for å hente filmer fra en gitt skuespiller\n    const getMovieActorData = async () => {\n      const movieActors = await getMovieActor('Robert Downey jr')\n      // console.log(JSON.stringify(movieActors))\n    }\n    // Kaller på getActorsData funksjonen og tar med en .catch\n    // for å fange opp eventuelle feil\n    getMovieActorData().catch((error) => console.log(error))\n  }, [])\n\n  return (\n    <ul>\n      {movies?.map((movie) => (\n        <Movie key={movie.slug} title={movie.title} actor={movie.actor} />\n      ))}\n    </ul>\n  )\n}\n\nexport default Movies\n"]},"metadata":{},"sourceType":"module"}