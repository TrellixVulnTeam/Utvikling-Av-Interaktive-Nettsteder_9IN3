{"ast":null,"code":"var _jsxFileName = \"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/Oppgave 8 React Sanity/react/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Movie from './Movie';\nimport { getMovie, getMovies, getActor, getActors } from '../lib/movieService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies() {\n  _s();\n\n  const [movies, setMovies] = useState();\n  const [actors, setActors] = useState(); // const url = 'https://jsonplaceholder.typicode.com/posts'\n  // useEffect(() => {\n  //   fetch(url)\n  //     .then((response) => response.json())\n  //     .then((data) => setMovies(data.splice(0, 10)))\n  //     .catch((error) => console.log(error))\n  // }, [])\n\n  useEffect(() => {\n    // Funksjon for å hente movie data\n    const getMoviesData = async () => {\n      const movies = await getMovies();\n      setMovies(movies);\n      console.log(JSON.stringify(movies));\n    }; // Funksjon for å hente actors data\n\n\n    const getActorsData = async () => {\n      const actors = await getActors();\n      setActors(actors);\n      console.log(JSON.stringify(actors));\n    }; // Kaller på funksjonen og tar med en .catch\n    // for å fange opp eventuelle feil\n\n\n    getActorsData().catch(error => console.log(error));\n  }, []); // const getActorsData = async () => {\n  //   const actors = await getActors()\n  //   setActors(actors)\n  //   console.log(JSON.stringify(actors))\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: getMoviesData,\n      children: \"Hent Filmer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), movies === null || movies === void 0 ? void 0 : movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n      title: movie.title,\n      actor: actors.title\n    }, movie.slug, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Movies, \"qtRZRKUl2R2lpEFICg9QQ4Vxaq4=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/Oppgave 8 React Sanity/react/src/components/Movies.js"],"names":["useEffect","useState","Movie","getMovie","getMovies","getActor","getActors","Movies","movies","setMovies","actors","setActors","getMoviesData","console","log","JSON","stringify","getActorsData","catch","error","map","movie","title","slug"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,EAAwCC,SAAxC,QAAyD,qBAAzD;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,EAApC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC,CAFgB,CAIhB;AACA;AACA;AACA;AACA;AACA;AACA;;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMY,aAAa,GAAG,YAAY;AAChC,YAAMJ,MAAM,GAAG,MAAMJ,SAAS,EAA9B;AACAK,MAAAA,SAAS,CAACD,MAAD,CAAT;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeR,MAAf,CAAZ;AACD,KAJD,CAFc,CAQd;;;AACA,UAAMS,aAAa,GAAG,YAAY;AAChC,YAAMP,MAAM,GAAG,MAAMJ,SAAS,EAA9B;AACAK,MAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAAZ;AACD,KAJD,CATc,CAcd;AACA;;;AACAO,IAAAA,aAAa,GAAGC,KAAhB,CAAuBC,KAAD,IAAWN,OAAO,CAACC,GAAR,CAAYK,KAAZ,CAAjC;AACD,GAjBQ,EAiBN,EAjBM,CAAT,CAdgB,CAiChB;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BAIE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEP,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAOGJ,MAPH,aAOGA,MAPH,uBAOGA,MAAM,CAAEY,GAAR,CAAaC,KAAD,iBACX,QAAC,KAAD;AAAwB,MAAA,KAAK,EAAEA,KAAK,CAACC,KAArC;AAA4C,MAAA,KAAK,EAAEZ,MAAM,CAACY;AAA1D,OAAYD,KAAK,CAACE,IAAlB;AAAA;AAAA;AAAA;AAAA,YADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GApDQhB,M;;KAAAA,M;AAsDT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport Movie from './Movie'\nimport { getMovie, getMovies, getActor, getActors } from '../lib/movieService'\n\nfunction Movies() {\n  const [movies, setMovies] = useState()\n  const [actors, setActors] = useState()\n\n  // const url = 'https://jsonplaceholder.typicode.com/posts'\n  // useEffect(() => {\n  //   fetch(url)\n  //     .then((response) => response.json())\n  //     .then((data) => setMovies(data.splice(0, 10)))\n  //     .catch((error) => console.log(error))\n  // }, [])\n\n\n\n  useEffect(() => {\n    // Funksjon for å hente movie data\n    const getMoviesData = async () => {\n      const movies = await getMovies()\n      setMovies(movies)\n      console.log(JSON.stringify(movies))\n    }\n    \n    // Funksjon for å hente actors data\n    const getActorsData = async () => {\n      const actors = await getActors()\n      setActors(actors)\n      console.log(JSON.stringify(actors))\n    }\n    // Kaller på funksjonen og tar med en .catch\n    // for å fange opp eventuelle feil\n    getActorsData().catch((error) => console.log(error))\n  }, [])\n\n  // const getActorsData = async () => {\n  //   const actors = await getActors()\n  //   setActors(actors)\n  //   console.log(JSON.stringify(actors))\n  // }\n\n  return (\n    <ul>\n      {/* <button type=\"button\" onClick={getActorsData}>\n        Hent Skuespillere\n      </button> */}\n      <button type=\"button\" onClick={getMoviesData}>\n        Hent Filmer\n      </button>\n      {movies?.map((movie) => (\n        <Movie key={movie.slug} title={movie.title} actor={actors.title} />\n      ))}\n    </ul>\n  )\n}\n\nexport default Movies\n"]},"metadata":{},"sourceType":"module"}