[{"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/index.js":"1","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/App.js":"2","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/components/Navigation.js":"3","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/components/Form.js":"4","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/components/Footer.js":"5","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/components/Sidebar.js":"6","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/components/Post.js":"7","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/routes/Routes.js":"8","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/pages/Home.js":"9","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/pages/Posts.js":"10","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/pages/Post.js":"11","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/pages/Contact.js":"12"},{"size":390,"mtime":1646229836309,"results":"13","hashOfConfig":"14"},{"size":149,"mtime":1646230129159,"results":"15","hashOfConfig":"14"},{"size":493,"mtime":1646265487284,"results":"16","hashOfConfig":"14"},{"size":1182,"mtime":1646232335075,"results":"17","hashOfConfig":"14"},{"size":126,"mtime":1646222454796,"results":"18","hashOfConfig":"14"},{"size":1486,"mtime":1646229190581,"results":"19","hashOfConfig":"14"},{"size":682,"mtime":1646229172123,"results":"20","hashOfConfig":"14"},{"size":790,"mtime":1646265800583,"results":"21","hashOfConfig":"14"},{"size":730,"mtime":1646230309205,"results":"22","hashOfConfig":"14"},{"size":1288,"mtime":1646265399464,"results":"23","hashOfConfig":"14"},{"size":1062,"mtime":1646265762955,"results":"24","hashOfConfig":"14"},{"size":81,"mtime":1646265706066,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"zh9csf",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"29"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"29"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/index.js",[],[],["67","68","69","70","71"],"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/App.js",[],[],"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/components/Navigation.js",["72"],[],"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/components/Form.js",[],[],"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/components/Footer.js",[],[],["73","74","75","76","77"],"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/components/Sidebar.js",[],[],"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/components/Post.js",["78"],[],"import { useState } from 'react'\n\nfunction Post({ title, image }) {\n  const [showmore, setShowmore] = useState(false)\n  const [post, setPost] = useState([])\n\n  const getPost = async (id) => {\n    setShowmore(!showmore)\n    if (post) return\n    const response = await fetch(\n      `https://jsonplaceholder.typicode.com/posts/${id}`\n    )\n    const data = await response.json()\n    setPost(data.body)\n    console.log(data)\n  }\n\n  return (\n    <article>\n      <h3>{title}</h3>\n      <img alt={title} src={image} />\n      {showmore ? <p>{post}</p> : null}\n      <button type=\"button\" onClick={() => getPost(id)}>\n        Se mer\n      </button>\n    </article>\n  )\n}\n\nexport default Post\n","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/routes/Routes.js",[],[],"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/pages/Home.js",[],[],"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/pages/Posts.js",["79"],[],"import { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Posts() {\n  const [posts, setPosts] = useState([])\n\n  const getImage = async (id) => {\n    const response = await fetch(\n      `https://jsonplaceholder.typicode.com/photos/${id}`\n    )\n    const data = await response.json()\n    return data.url\n  }\n\n  useEffect(() => {\n    const getPosts = async () => {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts`)\n      const data = await response.json()\n      const selectedPosts = data.slice(0, 10)\n      // const imageResult = selectedPosts.slice(0, 10).map((post) => {\n      //   const image = getImage(post.id);\n      //   return image;\n      // });\n      // const images = await Promise.all(imageResult);\n      // const postsWithImages = selectedPosts.map((post, index) => {\n      //   return { ...post, image: images[index] };\n      // });\n      setPosts(selectedPosts)\n    }\n    getPosts()\n  }, [])\n\n  return (\n    <section>\n      {posts && posts.length > 0\n        ? posts.map((post) => (\n            <article key={post.id}>\n              <h2>{post.title}</h2>\n              <Link to={`${post.id}`}>Gå til post</Link>\n            </article>\n          ))\n        : null}\n    </section>\n  )\n}\n\nexport default Posts\n","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/pages/Post.js",["80","81","82"],[],"import { useEffect, useEFfect, useState } from 'react'\nimport { Link, useParams } from 'react-router-dom'\n\nconst Post = () => {\n  const [post, setPost] = useState(null)\n  const { id } = useParams()\n\n  const getImage = async (id) => {\n    const response = await fetch(\n      `https://jsonplaceholder.typicode.com/photos/${id}`\n    )\n    const data = await response.json()\n    return data.thumbnailUrl\n  }\n\n  useEffect(() => {\n    const getPost = async () => {\n      const response = await fetch(\n        `https://jsonplaceholder.typicode.com/posts/${id}`\n      )\n      const data = await response.json()\n      const image = await getImage(id)\n\n      setPost({ ...data, image })\n    }\n    getPost()\n  }, [id])\n\n  return (\n    <article id=\"post\">\n      <h1>{post?.title}</h1>\n      <p>{post?.body}</p>\n      {/* Cors policy for å hente bilde */}\n      {/* <img alt=\"bilde\" src={post?.image} /> */}\n      <img alt=\"bilde\" src=\"https://www.fillmurray.com/640/360\" />\n      <Link to=\"/posts\">Tilbake til alle artikler</Link>\n    </article>\n  )\n}\n\nexport default Post\n","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/pages/Contact.js",[],[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":7,"column":9,"nodeType":"95","endLine":7,"endColumn":31},{"ruleId":"83","replacedBy":"96"},{"ruleId":"85","replacedBy":"97"},{"ruleId":"87","replacedBy":"98"},{"ruleId":"89","replacedBy":"99"},{"ruleId":"91","replacedBy":"100"},{"ruleId":"101","severity":2,"message":"102","line":23,"column":52,"nodeType":"103","messageId":"104","endLine":23,"endColumn":54},{"ruleId":"105","severity":2,"message":"106","line":7,"column":9,"nodeType":"103","messageId":"107","endLine":7,"endColumn":17},{"ruleId":"105","severity":2,"message":"108","line":1,"column":21,"nodeType":"103","messageId":"107","endLine":1,"endColumn":30},{"ruleId":"109","severity":2,"message":"110","line":4,"column":14,"nodeType":"111","messageId":"112","endLine":39,"endColumn":2,"fix":"113"},{"ruleId":"114","severity":2,"message":"115","line":8,"column":27,"nodeType":"103","messageId":"116","endLine":8,"endColumn":29},"lines-around-directive",["117"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["117"],[],[],[],[],"no-undef","'id' is not defined.","Identifier","undef","no-unused-vars","'getImage' is assigned a value but never used.","unusedVar","'useEFfect' is defined but never used.","react/function-component-definition","Function component is not a function declaration","ArrowFunctionExpression","function-declaration",{"range":"118","text":"119"},"no-shadow","'id' is already declared in the upper scope on line 6 column 11.","noShadow","padding-line-between-statements",[107,1039],"function Post() {\n  const [post, setPost] = useState(null)\n  const { id } = useParams()\n\n  const getImage = async (id) => {\n    const response = await fetch(\n      `https://jsonplaceholder.typicode.com/photos/${id}`\n    )\n    const data = await response.json()\n    return data.thumbnailUrl\n  }\n\n  useEffect(() => {\n    const getPost = async () => {\n      const response = await fetch(\n        `https://jsonplaceholder.typicode.com/posts/${id}`\n      )\n      const data = await response.json()\n      const image = await getImage(id)\n\n      setPost({ ...data, image })\n    }\n    getPost()\n  }, [id])\n\n  return (\n    <article id=\"post\">\n      <h1>{post?.title}</h1>\n      <p>{post?.body}</p>\n      {/* Cors policy for å hente bilde */}\n      {/* <img alt=\"bilde\" src={post?.image} /> */}\n      <img alt=\"bilde\" src=\"https://www.fillmurray.com/640/360\" />\n      <Link to=\"/posts\">Tilbake til alle artikler</Link>\n    </article>\n  )\n}"]