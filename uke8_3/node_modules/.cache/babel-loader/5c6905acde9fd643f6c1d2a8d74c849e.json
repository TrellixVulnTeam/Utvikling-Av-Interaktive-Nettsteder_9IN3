{"ast":null,"code":"var _jsxFileName = \"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/pages/Posts.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Posts() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n\n  const getImage = async id => {\n    const response = await fetch(`https://jsonplaceholder.typicode.com/photos/${id}`);\n    const data = await response.json();\n    return data.url;\n  };\n\n  useEffect(() => {\n    const getPosts = async () => {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts`);\n      const data = await response.json();\n      const selectedPosts = data.slice(0, 10); // const imageResult = selectedPosts.slice(0, 10).map((post) => {\n      //   const image = getImage(post.id);\n      //   return image;\n      // });\n      // const images = await Promise.all(imageResult);\n      // const postsWithImages = selectedPosts.map((post, index) => {\n      //   return { ...post, image: images[index] };\n      // });\n\n      setPosts(selectedPosts);\n    };\n\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: posts && posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `${post.id}`,\n        children: \"G\\xE5 til post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke8_3/src/pages/Posts.js"],"names":["useEffect","useState","Link","Posts","posts","setPosts","getImage","id","response","fetch","data","json","url","getPosts","selectedPosts","slice","length","map","post","title"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,WAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMK,QAAQ,GAAG,MAAOC,EAAP,IAAc;AAC7B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,+CAA8CF,EAAG,EADxB,CAA5B;AAGA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAI,CAACE,GAAZ;AACD,GAND;;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,QAAQ,GAAG,YAAY;AAC3B,YAAML,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAAF,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAMG,aAAa,GAAGJ,IAAI,CAACK,KAAL,CAAW,CAAX,EAAc,EAAd,CAAtB,CAH2B,CAI3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAV,MAAAA,QAAQ,CAACS,aAAD,CAAR;AACD,KAbD;;AAcAD,IAAAA,QAAQ;AACT,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE;AAAA,cACGT,KAAK,IAAIA,KAAK,CAACY,MAAN,GAAe,CAAxB,GACGZ,KAAK,CAACa,GAAN,CAAWC,IAAD,iBACR;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,GAAED,IAAI,CAACX,EAAG,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAcW,IAAI,CAACX,EAAnB;AAAA;AAAA;AAAA;AAAA,YADF,CADH,GAOG;AARN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAzCQJ,K;;KAAAA,K;AA2CT,eAAeA,KAAf","sourcesContent":["import { useEffect, useState } from 'react-dom'\nimport { Link } from 'react-router-dom'\n\nfunction Posts() {\n  const [posts, setPosts] = useState([])\n\n  const getImage = async (id) => {\n    const response = await fetch(\n      `https://jsonplaceholder.typicode.com/photos/${id}`\n    )\n    const data = await response.json()\n    return data.url\n  }\n\n  useEffect(() => {\n    const getPosts = async () => {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts`)\n      const data = await response.json()\n      const selectedPosts = data.slice(0, 10)\n      // const imageResult = selectedPosts.slice(0, 10).map((post) => {\n      //   const image = getImage(post.id);\n      //   return image;\n      // });\n      // const images = await Promise.all(imageResult);\n      // const postsWithImages = selectedPosts.map((post, index) => {\n      //   return { ...post, image: images[index] };\n      // });\n      setPosts(selectedPosts)\n    }\n    getPosts()\n  }, [])\n\n  return (\n    <section>\n      {posts && posts.length > 0\n        ? posts.map((post) => (\n            <article key={post.id}>\n              <h2>{post.title}</h2>\n              <Link to={`${post.id}`}>GÃ¥ til post</Link>\n            </article>\n          ))\n        : null}\n    </section>\n  )\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}