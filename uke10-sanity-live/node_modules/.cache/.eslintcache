[{"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/index.js":"1","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/App.js":"2","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/lib/services/quiz.js":"3","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/lib/client.js":"4","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/pages/Quizzes.js":"5","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/pages/Quiz.js":"6","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/layout/Layout.js":"7","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/components/Question.js":"8","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/components/Answer.js":"9"},{"size":390,"mtime":1647434580431,"results":"10","hashOfConfig":"11"},{"size":806,"mtime":1648035823825,"results":"12","hashOfConfig":"11"},{"size":1068,"mtime":1648046238725,"results":"13","hashOfConfig":"11"},{"size":274,"mtime":1648045062282,"results":"14","hashOfConfig":"11"},{"size":2011,"mtime":1648035630793,"results":"15","hashOfConfig":"11"},{"size":1995,"mtime":1648047215097,"results":"16","hashOfConfig":"11"},{"size":216,"mtime":1647434676082,"results":"17","hashOfConfig":"11"},{"size":148,"mtime":1648038181611,"results":"18","hashOfConfig":"11"},{"size":654,"mtime":1648044353313,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1aqt99",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/index.js",[],[],["52","53","54","55","56"],"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/App.js",["57"],[],"import { Routes, Route } from 'react-router-dom'\nimport Layout from './layout/Layout'\nimport { getQuizzes } from './lib/services/quiz'\nimport Quiz from './pages/Quiz'\nimport Quizzes from './pages/Quizzes'\n\nexport default function App() {\n  // Write JavaScript, use Hooks, add state and more\n  const getSanityData = () => {\n    getQuizzes()\n  }\n\n  return (\n    <Routes>\n      {/* Gir konsistent Layout p√• alle ruter */}\n      <Route element={<Layout />}>\n        {/* Hovedsiden viser Quizzes */}\n        <Route index element={<Quizzes />} />\n        {/* /quiz */}\n        <Route path=\"quiz\">\n          {/* /quiz */}\n          <Route index element={<Quizzes />} />\n          {/* quiz/et-eller-annet */}\n          <Route path=\":slug\" element={<Quiz />} />\n        </Route>\n      </Route>\n    </Routes>\n  )\n}\n","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/lib/services/quiz.js",["58","59","60"],[],"import client from '../client'\n\nconst quizzesFields = `\n_id,\ntitle,\n\"slug\": slug.current,\n\"category\": category->name.current,\n`\n\nconst quizFields = `\n_id,\ntitle,\n\"slug\": slug.current,\nquestions,\n`\n\nexport async function getQuizzes() {\n  const data = await client.fetch(`*[_type == \"quiz\"]{${quizzesFields}}`)\n  console.log(data)\n  return data\n}\n\nexport async function getQuizByCategory(category) {\n  const data = await client.fetch(\n    `*[_type == \"quiz\" && category->name.current==$category]{${quizzesFields}}`,\n    { category }\n  )\n  console.log(data)\n  return data\n}\n\nexport async function getQuizBySlug(slug) {\n  const data = await client.fetch(\n    `*[_type == \"quiz\" && slug.current==$slug]{${quizFields}}`,\n    { slug }\n  )\n  return data?.[0]\n  console.log(data)\n}\n\nexport async function createGame({ email, quizId }) {\n  let data\n  try {\n    const data = await client.create({\n      _type: 'game',\n      email,\n      quiz: {\n        _type: 'reference',\n        _ref: quizId,\n      },\n    })\n  } catch (error) {\n    return 'Noe gikk galt'\n  }\n\n  return data\n}\n","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/lib/client.js",[],[],"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/pages/Quizzes.js",["61"],[],"import { Link } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\nimport { getQuizzes, getQuizByCategory } from '../lib/services/quiz'\n\nconst quizzes = [\n  { id: 1, title: 'React Quiz', slug: 'slug-1', category: 'react' },\n  { id: 2, title: 'Sanity Quiz', slug: 'slug-2', category: 'sanity' },\n]\n\nconst categories = ['Sanity', 'React']\n\nfunction Quizzes() {\n  const [content, setContent] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  const handleFilter = async (event) => {\n    const category = event.target.value.toLowerCase()\n    let data\n    if (category === 'alle') {\n      data = await getQuizzes()\n    } else {\n      data = await getQuizByCategory(category)\n    }\n    setContent(data)\n  }\n\n  useEffect(() => {\n    const listQuizzes = async () => {\n      setLoading(true)\n      const data = await getQuizzes()\n      setLoading(false)\n      setContent(data)\n    }\n    listQuizzes()\n  }, [])\n\n  if (loading) {\n    return <p>Henter data...</p>\n  }\n\n  return (\n    <div>\n      <h1 className=\"text-3xl font-bold text-white\">Velkommet til HIOF quiz</h1>\n      <label\n        htmlFor=\"category\"\n        className=\"mt-6 block text-sm font-medium text-white\"\n      >\n        Velg Kategori\n      </label>\n      <select\n        id=\"category\"\n        defaultValue=\"Alle\"\n        className=\"mt-1 block w-full rounded-md border-gray-300 py-2 pl-3 pr-8 text-base focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm\"\n        onChange={handleFilter}\n      >\n        <option value=\"Alle\">Alle</option>\n        {categories.map((category) => (\n          <option key={category} value={category}>\n            {category}\n          </option>\n        ))}\n      </select>\n      <ul className=\"mt-4 list-inside list-disc\">\n        {content?.map((quiz) => (\n          <li key={quiz.slug} className=\"mb-2 text-white underline\">\n            <Link to={`/quiz/${quiz.slug}`}>{quiz.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Quizzes\n","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/pages/Quiz.js",["62","63"],[],"import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport Answer from '../components/Answer'\nimport Question from '../components/Question'\nimport { getQuizBySlug, createGame } from '../lib/services/quiz'\n\nfunction Quiz() {\n  const [current, setCurrent] = useState(0)\n  const [content, setContent] = useState(null)\n  const [answers, setAnswers] = useState([])\n  const currentQuestion = content?.questions[current]\n  const checkedAnswer = answers?.[current]\n  const isFail = !checkedAnswer?.correct\n  const { slug } = useParams()\n\n  useEffect(() => {\n    const getQuiz = async () => {\n      const data = await getQuizBySlug(slug)\n      setContent(data)\n    }\n    getQuiz()\n  }, [slug])\n\n  const updateAnswer = (answer) => {\n    // setAnswers((prev) => [...prev, answer])\n    console.log([...answers.slice(0, current)])\n    console.log([answer])\n    setAnswers([\n      ...answers.slice(0, current),\n      answer,\n      ...answers.slice(current + 1),\n    ])\n  }\n  //TODO asdadasdads\n  const progress = async () => {\n    if (current + 1 > content?.questions?.length) {\n      const result = await createGame({\n        email: 'joakim.vu@hiof.no',\n        quizId: content?._id,\n      })\n    } else {\n      setCurrent((prev) => prev + 1)\n    }\n  }\n\n  return (\n    <div>\n      <h1 className=\"mb3 text-2xl font-bold text-white\">Quiz</h1>\n      {JSON.stringify(answers)}\n      <section key={currentQuestion?._key}>\n        <Question title={currentQuestion?.title} />\n        {currentQuestion?.answers?.map((answer) => (\n          <Answer\n            key={answer._key}\n            answer={answer}\n            updateAnswer={updateAnswer}\n            checkedAnswer={checkedAnswer}\n            isFail={isFail}\n          />\n        ))}\n        <button\n          type=\"button\"\n          className=\"mt-4 rounded bg-orange-400 px-4 py-2 text-white\"\n          onClick={progress}\n        >\n          Neste\n        </button>\n      </section>\n    </div>\n  )\n}\n\nexport default Quiz\n","/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/layout/Layout.js",[],[],"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/components/Question.js",[],[],"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/components/Answer.js",[],[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":2,"message":"75","line":9,"column":9,"nodeType":"76","messageId":"77","endLine":9,"endColumn":22},{"ruleId":"78","severity":2,"message":"79","line":38,"column":3,"nodeType":"80","messageId":"81","endLine":38,"endColumn":20},{"ruleId":"74","severity":2,"message":"82","line":44,"column":11,"nodeType":"76","messageId":"77","endLine":44,"endColumn":15},{"ruleId":"83","severity":2,"message":"84","line":44,"column":11,"nodeType":"76","messageId":"85","endLine":44,"endColumn":15},{"ruleId":"74","severity":2,"message":"86","line":5,"column":7,"nodeType":"76","messageId":"77","endLine":5,"endColumn":14},{"ruleId":"87","severity":2,"message":"88","line":34,"column":3,"nodeType":"89","messageId":"90","endLine":34,"endColumn":21,"fix":"91"},{"ruleId":"74","severity":2,"message":"92","line":37,"column":13,"nodeType":"76","messageId":"77","endLine":37,"endColumn":19},"lines-around-directive",["93"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'getSanityData' is assigned a value but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'data' is assigned a value but never used.","no-shadow","'data' is already declared in the upper scope on line 42 column 7.","noShadow","'quizzes' is assigned a value but never used.","spaced-comment","Expected exception block, space or tab after '//' in comment.","Line","expectedExceptionAfter",{"range":"94","text":"95"},"'result' is assigned a value but never used.","padding-line-between-statements",[1000,1000]," "]