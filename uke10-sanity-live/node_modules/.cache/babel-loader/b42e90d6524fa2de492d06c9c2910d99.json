{"ast":null,"code":"var _jsxFileName = \"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/pages/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Answer from '../components/Answer';\nimport Question from '../components/Question';\nimport { getQuizBySlug } from '../lib/services/quiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  var _content$questions;\n\n  const [content, setContent] = useState(null);\n  const {\n    slug\n  } = useParams();\n  useEffect(() => {\n    const getQuiz = async () => {\n      const data = await getQuizBySlug(slug);\n      setContent(data);\n    };\n\n    getQuiz();\n  }, [slug]);\n  const [answer, setAnswer] = useState();\n\n  const updateAnswer = event => {\n    const {\n      value\n    } = event.target;\n    setAnswer(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb3 text-2xl font-bold text-white\",\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), content === null || content === void 0 ? void 0 : (_content$questions = content.questions) === null || _content$questions === void 0 ? void 0 : _content$questions.map(question => {\n      var _question$answers;\n\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(Question, {\n          title: question.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), question === null || question === void 0 ? void 0 : (_question$answers = question.answers) === null || _question$answers === void 0 ? void 0 : _question$answers.map(answer => /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(Answer, {\n            title: answer.title,\n            correct: answer.correct\n          }, answer._key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, answer._key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))]\n      }, question._key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"mIudSG5FwTgVh+ASo/B247lsS+8=\", false, function () {\n  return [useParams];\n});\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/pages/Quiz.js"],"names":["useEffect","useState","useParams","Answer","Question","getQuizBySlug","Quiz","content","setContent","slug","getQuiz","data","answer","setAnswer","updateAnswer","event","value","target","questions","map","question","title","answers","correct","_key"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAWP,SAAS,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,OAAO,GAAG,YAAY;AAC1B,YAAMC,IAAI,GAAG,MAAMN,aAAa,CAACI,IAAD,CAAhC;AACAD,MAAAA,UAAU,CAACG,IAAD,CAAV;AACD,KAHD;;AAIAD,IAAAA,OAAO;AACR,GANQ,EAMN,CAACD,IAAD,CANM,CAAT;AAQA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,EAApC;;AAEA,QAAMa,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,KAAK,CAACE,MAAxB;AACAJ,IAAAA,SAAS,CAACG,KAAD,CAAT;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGT,OAFH,aAEGA,OAFH,6CAEGA,OAAO,CAAEW,SAFZ,uDAEG,mBAAoBC,GAApB,CAAyBC,QAAD;AAAA;;AAAA,0BACvB;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,QAAQ,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADF,EAGGD,QAHH,aAGGA,QAHH,4CAGGA,QAAQ,CAAEE,OAHb,sDAGG,kBAAmBH,GAAnB,CAAwBP,MAAD,iBACtB;AAAA,iCAEE,QAAC,MAAD;AAEE,YAAA,KAAK,EAAEA,MAAM,CAACS,KAFhB;AAGE,YAAA,OAAO,EAAET,MAAM,CAACW;AAHlB,aACOX,MAAM,CAACY,IADd;AAAA;AAAA;AAAA;AAAA;AAFF,WAAcZ,MAAM,CAACY,IAArB;AAAA;AAAA;AAAA;AAAA,gBADD,CAHH;AAAA,SAAcJ,QAAQ,CAACI,IAAvB;AAAA;AAAA;AAAA;AAAA,cADuB;AAAA,KAAxB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAxCQlB,I;UAEUJ,S;;;KAFVI,I;AA0CT,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport Answer from '../components/Answer'\nimport Question from '../components/Question'\nimport { getQuizBySlug } from '../lib/services/quiz'\n\nfunction Quiz() {\n  const [content, setContent] = useState(null)\n  const { slug } = useParams()\n\n  useEffect(() => {\n    const getQuiz = async () => {\n      const data = await getQuizBySlug(slug)\n      setContent(data)\n    }\n    getQuiz()\n  }, [slug])\n\n  const [answer, setAnswer] = useState()\n\n  const updateAnswer = (event) => {\n    const { value } = event.target\n    setAnswer(value)\n  }\n\n  return (\n    <div>\n      <h1 className=\"mb3 text-2xl font-bold text-white\">Quiz</h1>\n      {content?.questions?.map((question) => (\n        <section key={question._key}>\n          <Question title={question.title} />\n          {/* {JSON.stringify(question.answers)} */}\n          {question?.answers?.map((answer) => (\n            <section key={answer._key}>\n              {/* {JSON.stringify(answer.title)} */}\n              <Answer\n                key={answer._key}\n                title={answer.title}\n                correct={answer.correct}\n              />\n            </section>\n          ))}\n        </section>\n      ))}\n    </div>\n  )\n}\n\nexport default Quiz\n"]},"metadata":{},"sourceType":"module"}