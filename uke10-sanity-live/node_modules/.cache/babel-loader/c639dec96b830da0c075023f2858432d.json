{"ast":null,"code":"var _jsxFileName = \"/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/pages/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Answer from '../components/Answer';\nimport Question from '../components/Question';\nimport { getQuizBySlug } from '../lib/services/quiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  var _currentQuestion$answ;\n\n  const [current, setCurrent] = useState(0);\n  const [content, setContent] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const currentQuestion = content === null || content === void 0 ? void 0 : content.questions[current];\n  const checkedAnswer = answers[current];\n  const isFail = !(checkedAnswer !== null && checkedAnswer !== void 0 && checkedAnswer.correct);\n  const {\n    slug\n  } = useParams();\n  useEffect(() => {\n    const getQuiz = async () => {\n      const data = await getQuizBySlug(slug);\n      setContent(data);\n    };\n\n    getQuiz();\n  }, [slug]);\n\n  const updateAnswer = answer => {\n    setAnswers(prev => [...prev, answer]);\n  };\n\n  const progress = () => {\n    setCurrent(prev => prev + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb3 text-2xl font-bold text-white\",\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), JSON.stringify(answers), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        title: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), currentQuestion === null || currentQuestion === void 0 ? void 0 : (_currentQuestion$answ = currentQuestion.answers) === null || _currentQuestion$answ === void 0 ? void 0 : _currentQuestion$answ.map(answer => /*#__PURE__*/_jsxDEV(Answer, {\n        answer: answer,\n        updateAnswer: updateAnswer,\n        checkedAnswer: checkedAnswer,\n        isFail: isFail\n      }, answer._key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"mt-2rounded bg-orange-400 px-4 text-white\",\n        onClick: progress,\n        children: \"Neste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion._key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"69Y07xH/BDwb1WeqZjNYz9bFoxU=\", false, function () {\n  return [useParams];\n});\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/joakimvu/Documents/GitHub/Utvikling-Av-Interaktive-Nettsteder/uke10-sanity-live/src/pages/Quiz.js"],"names":["useEffect","useState","useParams","Answer","Question","getQuizBySlug","Quiz","current","setCurrent","content","setContent","answers","setAnswers","currentQuestion","questions","checkedAnswer","isFail","correct","slug","getQuiz","data","updateAnswer","answer","prev","progress","JSON","stringify","title","map","_key"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMY,eAAe,GAAGJ,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEK,SAAT,CAAmBP,OAAnB,CAAxB;AACA,QAAMQ,aAAa,GAAGJ,OAAO,CAACJ,OAAD,CAA7B;AACA,QAAMS,MAAM,GAAG,EAACD,aAAD,aAACA,aAAD,eAACA,aAAa,CAAEE,OAAhB,CAAf;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWhB,SAAS,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,OAAO,GAAG,YAAY;AAC1B,YAAMC,IAAI,GAAG,MAAMf,aAAa,CAACa,IAAD,CAAhC;AACAR,MAAAA,UAAU,CAACU,IAAD,CAAV;AACD,KAHD;;AAIAD,IAAAA,OAAO;AACR,GANQ,EAMN,CAACD,IAAD,CANM,CAAT;;AAQA,QAAMG,YAAY,GAAIC,MAAD,IAAY;AAC/BV,IAAAA,UAAU,CAAEW,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUD,MAAV,CAAX,CAAV;AACD,GAFD;;AAIA,QAAME,QAAQ,GAAG,MAAM;AACrBhB,IAAAA,UAAU,CAAEe,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAV;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,IAAI,CAACC,SAAL,CAAef,OAAf,CAFH,eAGE;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEE,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEc;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGd,eAFH,aAEGA,eAFH,gDAEGA,eAAe,CAAEF,OAFpB,0DAEG,sBAA0BiB,GAA1B,CAA+BN,MAAD,iBAC7B,QAAC,MAAD;AAEE,QAAA,MAAM,EAAEA,MAFV;AAGE,QAAA,YAAY,EAAED,YAHhB;AAIE,QAAA,aAAa,EAAEN,aAJjB;AAKE,QAAA,MAAM,EAAEC;AALV,SACOM,MAAM,CAACO,IADd;AAAA;AAAA;AAAA;AAAA,cADD,CAFH,eAWE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,2CAFZ;AAGE,QAAA,OAAO,EAAEL,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA,OAAcX,eAAd,aAAcA,eAAd,uBAAcA,eAAe,CAAEgB,IAA/B;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAlDQvB,I;UAOUJ,S;;;KAPVI,I;AAoDT,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport Answer from '../components/Answer'\nimport Question from '../components/Question'\nimport { getQuizBySlug } from '../lib/services/quiz'\n\nfunction Quiz() {\n  const [current, setCurrent] = useState(0)\n  const [content, setContent] = useState(null)\n  const [answers, setAnswers] = useState([])\n  const currentQuestion = content?.questions[current]\n  const checkedAnswer = answers[current]\n  const isFail = !checkedAnswer?.correct\n  const { slug } = useParams()\n\n  useEffect(() => {\n    const getQuiz = async () => {\n      const data = await getQuizBySlug(slug)\n      setContent(data)\n    }\n    getQuiz()\n  }, [slug])\n\n  const updateAnswer = (answer) => {\n    setAnswers((prev) => [...prev, answer])\n  }\n\n  const progress = () => {\n    setCurrent((prev) => prev + 1)\n  }\n\n  return (\n    <div>\n      <h1 className=\"mb3 text-2xl font-bold text-white\">Quiz</h1>\n      {JSON.stringify(answers)}\n      <section key={currentQuestion?._key}>\n        <Question title={currentQuestion?.title} />\n        {currentQuestion?.answers?.map((answer) => (\n          <Answer\n            key={answer._key}\n            answer={answer}\n            updateAnswer={updateAnswer}\n            checkedAnswer={checkedAnswer}\n            isFail={isFail}\n          />\n        ))}\n        <button\n          type=\"button\"\n          className=\"mt-2rounded bg-orange-400 px-4 text-white\"\n          onClick={progress}\n        >\n          Neste\n        </button>\n      </section>\n    </div>\n  )\n}\n\nexport default Quiz\n"]},"metadata":{},"sourceType":"module"}